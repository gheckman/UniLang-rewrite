􏶞global􏶟
􏷲A node type associated to the generic node of the electrical graph.􏷱
􏷰􏷯

􏷮Electrical􏷭 􏷮Node􏷭
􏷬Trevor Hickey􏷫


􏶊The type of electrical component that an electrical graph node represents.􏶉
􏶈For an electrical circuit, nodes represent all electrical components including 'wires' and 'ground'.
'Wires' and 'ground' are node types, but they are NOT something that a user of the graph will need to specify.  
'Wires' and 'ground' will be created internally by the graph, to help manage connections, and internal logic.
A user will only need to interact with the graph's interface to connect components together and specify which ones go to ground.
It's unlikely that a user will ever specify WIRE or GROUND themselves when describing and building up their circuit.

Note 1: Ground is important for calculating complete paths.
Note 2: Because of the graph's interface, connecting components will automatically put a wire between them.
Therefore, using WIRE should never be done by the client using the generic graph(the graph will do it for you).
Note 3: All other node types can be used to perform specific functionality as needed by the user, but the electrical graph itself does not
rely on, or do anything special when encountering other node types; it simply stores them so they can be queried later.  Except for ground;
It uses ground to know whether there is a complete path.􏶇
􏶀node type􏶋
􏶆battery􏶅
􏶆breaker􏶅
􏶆bus􏶅
􏶆device􏶅 􏶂devices are often leaf nodes of the graph, and usually the last nodes that branch off the bus.􏶁
􏶆diode􏶅
􏶆epu􏶅
􏶆fuse􏶅
􏶆generator􏶅
􏶆ground􏶅 􏶂Used internally by the graph.  Should not be used by the client of the graph.􏶁
􏶆junction􏶅
􏶆relay􏶅
􏶆resistor􏶅
􏶆wire􏶅 􏶂Used internally by the graph.  Should not be used by the client of the graph.􏶁
