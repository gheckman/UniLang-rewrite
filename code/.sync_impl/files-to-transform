#!/usr/bin/env bash



#stack based directory changing.  
#Used to step into directories, and make conversion based on relative path,
#steping out after can be done automatically.
function Silently_Go_Back_To_The_Previous_Pwd(){
  popd > /dev/null 2>&1;
}
function Step_In_Call_Function_Step_Out(){
  pushd $1 > /dev/null 2>&1;          #step in
  $2;                                   #call function
  Silently_Go_Back_To_The_Previous_Pwd; #step out
}

#name of UniLang file / where to place in repo / where to place class wrapper
function Transfer_Data_Structures(){ :
  Transfer-Object-Good "vector" "Shared/ffs" "Utilities"
}

function Transfer_Utilities(){ :
  Transfer-Global "time_utilities" "Shared/ffs"
  Transfer-Global "date_utilities" "Shared/ffs"
  Transfer-Global "pack_utilities" "Shared/ffs"
  Transfer-Global "udp_connection_utilities" "Shared/ffs"
  Transfer-Global "math_utilities" "Shared/ffs"
  Transfer-Global "bit_utilities" "Shared/ffs"
}
function Transfer_Time(){ :
  Transfer-Global "month" "Components/Time"
  Transfer-Object-Bad-Bools "date_time" "Components/Time" "Components/Time"
  Transfer-Object-Bad-Bools "millisecond_timer" "Components/Time" "Components/Time"
  Transfer-Object-Bad-Bools "simulation_clock" "Components/Time" "Components/Time"
}
function Transfer_Electrical_Generic(){ :
  Transfer-Object-Bad-Bools "junction" "Components/Electrical/Generic" "Components/Electrical/Generic"
  Transfer-Object-Bad-Bools "node" "Components/Electrical/Generic" "Components/Electrical/Generic"
  Transfer-Global "node_type" "Components/Electrical/Generic"
  Transfer-Object-Bad-Bools "electrical_graph" "Components/Electrical/Generic" "Components/Electrical/Generic"
  Transfer-Object-Bad-Bools "path" "Components/Electrical/Generic" "Components/Electrical/Generic"
  Transfer-Object-Bad-Bools "paths" "Components/Electrical/Generic" "Components/Electrical/Generic"
  Transfer-Global "electrical_config" "Components/Electrical/Generic"
}
function Transfer_Electrical_Specific(){ :
  Transfer-Object-Bad-Bools "after_junction_box" "Components/Electrical/Specific" "Components/Electrical/Specific"
  Transfer-Object-Bad-Bools "battery_box" "Components/Electrical/Specific" "Components/Electrical/Specific"
  Transfer-Object-Bad-Bools "diode_box" "Components/Electrical/Specific" "Components/Electrical/Specific"
  Transfer-Object-Bad-Bools "distribution_box" "Components/Electrical/Specific" "Components/Electrical/Specific"
  Transfer-Object-Bad-Bools "overhead_panel" "Components/Electrical/Specific" "Components/Electrical/Specific"
  Transfer-Object-Bad-Bools "D_C_power_system" "Components/Electrical/Specific" "Components/Electrical/Specific"
}
function Transfer_Electrical_Manager(){ :

  #function breakdown
  Transfer-Global "electrical_input_setter" "SystemManagers/Electrical"
  Transfer-Global "electrical_malfunction_applier" "SystemManagers/Electrical"
  Transfer-Global "electrical_updater" "SystemManagers/Electrical"
  
}

function Transfer_Electrical_Manager_Data(){ :
  #data breakdown
  Transfer-Data "electrical_malfunctions" "SystemManagers/Electrical/ElectricalData"
  #Transfer-Global "electrical_power_flags"
  #Transfer-Global "electrical_screen_data"
  #Transfer-Global "electrical_switches"
  #Transfer-Global "panel_breakers"
}


function Transfer_Electrical_Components(){ :
  Transfer-Object-Bad-Bools "battery" "Components/Electrical" "Components/Electrical"
  Transfer-Global "battery_chemistry" "Components/Electrical/Battery" "Components/Electrical/Battery"
  Transfer-Object-Bad-Bools "circuit_breaker" "Components/Electrical" "Components/Electrical"
}
function Transfer_Other(){ :
  Transfer-Global "ffs_const" "Shared/ffs"
}
function Transfer_J2(){ :
  Transfer-Global "j2_communication" "Connections/UDP/J2";
  Transfer-Global "j2_message_types" "Connections/UDP/J2/J2Messages";
  Transfer-Global "ground_contact_location" "Connections/UDP/J2/J2Messages";
  Transfer-Global "j2_packing" "Connections/UDP/J2";
  Transfer-Global "j2_unpacking" "Connections/UDP/J2";
  Transfer-Global "j2_const" "Connections/UDP/J2/J2Messages";
  Transfer-Global "J2_communication_config" "Connections/UDP/J2/J2Communication";
}
function Transfer_Components(){ :
  Transfer-Object-Bad-Bools "tri_state_switch" "Components/Generic/Controls" "Components/Generic/Controls";
  Transfer-Global "tri_state" "Components/Generic/Controls/TriStateSwitch";
}
function Transfer_Connections_Config(){ :
  #Transfer-Global "Gls_communication_config" "Connections/UDP/GLInstruments";
  #Transfer-Global "Ios_communication_config" "Connections/UDP/IOS";
  #Transfer-Global "Sep_communication_config" "Connections/UDP/SEP";
  #Transfer-Global "Srns_communication_config" "Connections/UDP/SRNS";
  #Transfer-Global "Arc231_communication_config" "Connections/UDP/Arc231";
  #Transfer-Global "aural_communication_config" "Connections/UDP/Aural";
  #Transfer-Global "bug_eye_communication_config" "Connections/UDP/BugEye";
  #Transfer-Global "ctrl_loader_communication_config" "Connections/UDP/ControlLoader";
  #Transfer-Global "garmin_communication_config" "Connections/UDP/Garmin430";
  #Transfer-Global "motion_seats_communication_config" "Connections/UDP/MotionSeats";
}
function Transfer_Concurrency(){ :
  Transfer-Global "time_thread" "Concurrency";
}
function Transfer_Dynamic_Debug(){ :
  Transfer-Global "dynamic_debug_configuration" "Connections/UDP/DynamicDebug";
  Transfer-Global "dynamic_debug_type" "Connections/UDP/DynamicDebug";
  Transfer-Global "dynamic_debug" "Connections/UDP/DynamicDebug";
  Transfer-Global "dynamic_debug_message" "Connections/UDP/DynamicDebug";
  Transfer-Global "dynamic_debug_sender" "Connections/UDP/DynamicDebug";
}
function Transform-And_Transfer-SimHost-Files(){ :

  #Step into a Unilang directory.  Compile and transfer code into the real codebase.
  #                              PATH                            FUNCTION
  #Step_In_Call_Function_Step_Out "Data_Structures"               Transfer_Data_Structures;
  #Step_In_Call_Function_Step_Out "Other/Utilities"               Transfer_Utilities;
  #Step_In_Call_Function_Step_Out "Systems/Time"                  Transfer_Time;
  
    #Step_In_Call_Function_Step_Out "Systems/Electrical/generic"    Transfer_Electrical_Generic;
    #Step_In_Call_Function_Step_Out "Systems/Electrical/specific"   Transfer_Electrical_Specific;
    Step_In_Call_Function_Step_Out "Systems/Electrical/manager"    Transfer_Electrical_Manager;
    Step_In_Call_Function_Step_Out "Systems/Electrical/manager_data"    Transfer_Electrical_Manager_Data;
    #Step_In_Call_Function_Step_Out "Systems/Electrical/components" Transfer_Electrical_Components;
  
  #Step_In_Call_Function_Step_Out "Other"                         Transfer_Other;
  #Step_In_Call_Function_Step_Out "Connections/J2"                Transfer_J2;
  #Step_In_Call_Function_Step_Out "Components"                    Transfer_Components;
                  #Step_In_Call_Function_Step_Out "Connections/Configs"           Transfer_Connections_Config;
  #Step_In_Call_Function_Step_Out "Concurrency"                   Transfer_Concurrency;
  #Step_In_Call_Function_Step_Out "Other/DynamicDebug"            Transfer_Dynamic_Debug;
}


function UniLang-Transform(){ :
  
  Step_In_Call_Function_Step_Out "SimHost" Transform-And_Transfer-SimHost-Files;
  
}
