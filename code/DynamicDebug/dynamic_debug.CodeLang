􏶞global􏶟
􏷲The front-end API to the Dynamic Debugger Library.  
These functions allow particular data to be sent out over the network to the dynamic debugger application.􏷱
􏷰Data is intended to be sent out over UDP to the dynamic debugger which will 
organize the data, track changes over time, and perform writes back to the debug data.  
"Writes back to the debug data", will not be accounted for at this time.
Due to the limitations of C, we cannot utilize templates or function overloading.

example usage:
SendDebugBool(tSystem.bHasPower,"System/PowerRelated");
􏷯
􏷮Debug􏷭 􏷮Communication􏷭
􏷬Trevor Hickey􏷫
􏷦stdioLib􏷥􏷢HASA: BOOL􏷡
􏷦DynamicDebugConfiguration􏷥􏷢USES: MAX_LENGTH_OF_DEBUG_PATH_VALUE, MAX_LENGTH_OF_DEBUG_STRING_VALUE􏷡
􏷤DynamicDebugMessage􏷣􏷢USES: DynamicDebugMessageT􏷡
􏷤DynamicDebugMessageSender􏷣􏷢USES: SendMessageToDynamicDebugger􏷡

􏷘+􏷗􏷒send debug int􏷑
􏷐Send an int value over the network to the dynamic debugger.􏷏
􏶠The debug value sent over MUST be an int.  
Watch out for implicit casts and truncation.􏶡
􏶜c􏶝􏷆int􏷅􏷄debug value􏷃􏷀The value to send over the network to the dynamic debugger.􏶿
􏶜c􏶝􏷆char[MAX_LENGTH_OF_DEBUG_PATH_VALUE]􏷅􏷄value path name􏷃􏷀A descriptive path name for the debug value.  Looks like file paths.􏶿
􏶴
    􏶲Create debug message struct based on parameter data.􏶱
    􏶲Send it over the network so it can be seen in the dynamic debugger.􏶱
    DynamicDebugMessageT tDebugMessage = 􏵲create dynamic debug message from int􏵳􏵶debug value􏵷,􏵶value path name􏵷);
    􏵲send message to the dynamic debugger􏵳tDebugMessage);
􏶳

􏷘+􏷗􏷒send debug real􏷑
􏷐Send a float value over the network to the dynamic debugger.􏷏
􏶠The debug value sent over MUST be a double.􏶡
􏶜c􏶝􏷆double􏷅􏷄debug value􏷃􏷀The value to send over the network to the dynamic debugger.􏶿
􏶜c􏶝􏷆char[MAX_LENGTH_OF_DEBUG_PATH_VALUE]􏷅􏷄value path name􏷃􏷀A descriptive path name for the debug value.  Looks like file paths.􏶿
􏶴
    􏶲Create debug message struct based on parameter data.􏶱
    􏶲Send it over the network so it can be seen in the dynamic debugger.􏶱
    DynamicDebugMessageT tDebugMessage = 􏵲create dynamic debug message from real􏵳􏵶debug value􏵷,􏵶value path name􏵷);
    􏵲send message to the dynamic debugger􏵳tDebugMessage);
􏶳

􏷘+􏷗􏷒send debug bool􏷑
􏷐Send a boolean value over the network to the dynamic debugger.􏷏
􏶠The debug value sent over MUST be a bool.  
Bytes can be used as well.  Ensure the value is only 1 or 0.􏶡
􏶜c􏶝􏷆BOOL􏷅􏷄debug value􏷃􏷀The value to send over the network to the dynamic debugger.􏶿
􏶜c􏶝􏷆char[MAX_LENGTH_OF_DEBUG_PATH_VALUE]􏷅􏷄value path name􏷃􏷀A descriptive path name for the debug value.  Looks like file paths.􏶿
􏶴
    􏶲Create debug message struct based on parameter data.􏶱
    􏶲Send it over the network so it can be seen in the dynamic debugger.􏶱
    DynamicDebugMessageT tDebugMessage = 􏵲create dynamic debug message from bool􏵳􏵶debug value􏵷,􏵶value path name􏵷);
    􏵲send message to the dynamic debugger􏵳tDebugMessage);
􏶳

􏷘+􏷗􏷒send debug string􏷑
􏷐Send a string value over the network to the dynamic debugger.􏷏
􏶠The debug value sent over MUST be a char array.  
Must be null terminated.  Do not exceed the array size.􏶡
􏶜c􏶝􏷆char[MAX_LENGTH_OF_DEBUG_STRING_VALUE]􏷅􏷄debug value􏷃􏷀The value to send over the network to the dynamic debugger.􏶿
􏶜c􏶝􏷆char[MAX_LENGTH_OF_DEBUG_PATH_VALUE]􏷅􏷄value path name􏷃􏷀A descriptive path name for the debug value.  Looks like file paths.􏶿
􏶴
    􏶲Create debug message struct based on parameter data.􏶱
    􏶲Send it over the network so it can be seen in the dynamic debugger.􏶱
    DynamicDebugMessageT tDebugMessage = 􏵲create dynamic debug message from string􏵳􏵶debug value􏵷,􏵶value path name􏵷);
    􏵲send message to the dynamic debugger􏵳tDebugMessage);
􏶳

