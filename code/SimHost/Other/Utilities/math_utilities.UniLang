􏶞g􏶟
􏷲math related utilities􏷱
􏷰generic math related functions not found in math.h􏷯
􏷮Math Utilities􏷭􏷮Utilities􏷭
􏷬Trevor Hickey􏷫
􏷤􏷣􏷦stddef.h􏷥􏷢USES: size_t􏷡
􏷤􏷣􏷦math.h􏷥􏷢USES: sqrt()􏷡

􏷘+􏷗􏷒float array average􏷑
􏷐takes the average of an array of floats􏷏
􏶠float specific function exists due to lack overloading/templates􏶡
􏶜􏶝􏷆float[]􏷅􏷄array􏷃􏷀array of numbers to average􏶿
􏶜􏶝􏷆size_t􏷅􏷄size􏷃􏷀the amount of elements to use when calculating the average􏶿
􏶚m􏶛􏶾float􏶽􏶼average􏶻􏶺the average of the selected elements􏶹
􏵪􏵫􏵨size must be <= the size of the array􏵩
􏶴

    float fTotal = 0.0f;
    size_t uIndex = 0u;
    for (; uIndex < 􏵶size􏵷; ++uIndex){
        fTotal += 􏵶array􏵷[uIndex];
    }
    return fTotal / 􏵶size􏵷;
􏶳

􏷘+􏷗􏷒int array average􏷑
􏷐takes the average of an array of ints􏷏
􏶠int specific function exists due to lack overloading/templates􏶡
􏶜􏶝􏷆int[]􏷅􏷄array􏷃􏷀array of numbers to average􏶿
􏶜􏶝􏷆size_t􏷅􏷄size􏷃􏷀the amount of elements to use when calculating the average􏶿
􏶚m􏶛􏶾int􏶽􏶼average􏶻􏶺the average of the selected elements􏶹
􏵪􏵫􏵨size must be <= the size of the array􏵩
􏶴

    int nTotal = 0;
    size_t uIndex = 0u;
    for (; uIndex < 􏵶size􏵷; ++uIndex){
        nTotal += 􏵶array􏵷[uIndex];
    }
    return nTotal / 􏵶size􏵷;
􏶳

􏷘+􏷗􏷒square􏷑
􏷐squares a number􏷏
􏶠n*n􏶡
􏶜􏶝􏷆float􏷅􏷄number􏷃􏷀the number to square􏶿
􏶚m􏶛􏶾float􏶽􏶼square􏶻􏶺the squared number􏶹
􏶴
    return 􏵶number􏵷*􏵶number􏵷;
􏶳

􏷘+􏷗􏷒dot product􏷑
􏷐takes the dot product of two vectors􏷏
􏶠assumes they are the same dimension on shared param􏶡
􏶜􏶝􏷆float[]􏷅􏷄vector1􏷃􏷀a vector to use in the dot product􏶿
􏶜􏶝􏷆float[]􏷅􏷄vector2􏷃􏷀a vector to use in the dot product􏶿
􏶜􏶝􏷆size_t􏷅􏷄dimension􏷃􏷀the dimension of the two vectors􏶿
􏶚m􏶛􏶾float􏶽􏶼dot product􏶻􏶺the dot product of the two elements􏶹
􏶴
    size_t uIndex = 0u;
    float fProduct = 0.0f;
    for (; uIndex < 􏵶dimension􏵷; ++uIndex){
        fProduct += 􏵶vector1􏵷[uIndex] * 􏵶vector2􏵷[uIndex];
    }
    return fProduct;
􏶳

􏷘+􏷗􏷒norm of vector􏷑
􏷐takes the norm of a vector􏷏
􏶠uses the dot product to calculate the norm of a vector􏶡
􏶜􏶝􏷆float[]􏷅􏷄vector􏷃􏷀a vector to get the norm of􏶿
􏶜􏶝􏷆size_t􏷅􏷄dimension􏷃􏷀the dimension of the vector􏶿
􏶚m􏶛􏶾float􏶽􏶼norm􏶻􏶺the norm of the vector􏶹
􏶴
    return sqrt(􏵲dot product􏵳􏵶vector􏵷,􏵶vector􏵷,􏵶dimension􏵷));
􏶳


􏷘+􏷗􏷒normalize vector􏷑
􏷐normalizes a vector􏷏
􏶠􏶡
􏶜m􏶝􏷆float[]􏷅􏷄vector􏷃􏷀the vector to normalize􏶿
􏶜􏶝􏷆size_t􏷅􏷄dimension􏷃􏷀the dimension of the vector􏶿
􏶴
    float fMagnitude = 􏵲norm of vector􏵳􏵶vector􏵷,􏵶dimension􏵷);
    size_t uIndex = 0u;
    for (;uIndex < 􏵶dimension􏵷; ++uIndex)
    {
        􏵶vector􏵷[uIndex] /= fMagnitude;
    }
􏶳

